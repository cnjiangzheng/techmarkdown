[
	{
		"appName": "call zwwx api",
		"host": "^127\\.0\\.0\\.1",
		"path": "^/tif/api/zwwx/(?![0-9])[a-zA-Z0-9_-]{2,64}/",
		"delayPromise": "let url = req.parsedUrl, p = url.pathname.split('/'); req.sp_targetUrl = url.path.replace(rule.pathRegExp, '/'); rf.http.get(rule.get_access_token+`?paasid=${p[4]}&type=zwwx`).then(ret => { if (ret.errcode == 0) { req.sp_accessToken = ret.data.access_token; } else { rf.writeLog('wwl_get_access_token_error', [req.url, JSON.stringify(ret)]); } done(); }, done);",
		"get_access_token": "http://127.0.0.1:18083/api/gettoken",
		"targetHost": "127.0.0.1:80",
		"targetPath": "{req.sp_targetUrl + (req.parsedUrl.search ? '&' : '?') + 'access_token=' + req.sp_accessToken}"
	},
	{
		"appName": "wwlocal login",
		"path": "^/_tif_wwlocal_login_/",
		"regexp": "^[\\S]*\\.shuzhigy\\.com$",
		"customProcessFunc": "let req = context.request;let res = context.response;let query = req.parsedUrl.query;let regexp = rule.regexp;let host = req.headers['host'];let getUserUrl;if ((req.headers['user-agent'] || '').indexOf('wwlocal/') > -1) {    getUserUrl = rule.getUserUrl.replace('{code}', query.code).replace('{paasid}', query.state);} else {    if (query.yhzxtype == 1) {        getUserUrl = rule.getUserUrlScan.replace('{code}', query.code).replace('{paasid}', query.state);    } else {        getUserUrl = rule.getUserUrlYhzx.replace('{code}', query.code).replace('{paasid}', query.state);    }};let onError = msg => {    res.writeHead(500);    res.end(msg.message || msg);};let req2 = process.mainModule.require('http').get(getUserUrl, res2 => {    let data = [];    res2.on('error', onError).on('data', d => data.push(d)).on('end', () => {        try {            let obj = JSON.parse(Buffer.concat(data).toString());            if (obj.errcode == 0 || obj.errcode == 40029) {                let id = Math.random().toString(16).slice(2) + Date.now().toString(16) + Math.random().toString(16).slice(2);                return new Promise(function (resolve, reject) {                    if (obj.errcode == 0) {rf.cache.setCache(`tif:auth:wwl:${id}`, JSON.stringify(obj), rule.ticketValidity, function (err) {                        err ? reject(err) : resolve()                    })} else { resolve(); }                }).then(() => {                    let redirect_url = query.url;                    let cookie = `tif_wwlid=${id};path=/;HttpOnly`;                    if (new RegExp(regexp, 'i').test(host)) {                        cookie = `tif_wwlid=${id};path=/;domain=.shuzhigy.com;HttpOnly`;                    } if (new RegExp('^[\\\\S]*\\\\.gy\\\\.gz\\\\.cegn\\\\.cn$','i').test(host)){cookie = `tif_wwlid=${id};path=/;domain=.gy.gz.cegn.cn;HttpOnly`;}                    res.writeHead(302, {'location': redirect_url, 'set-cookie': cookie});                    res.end();                })            } else {                onError(`OAuth error, get user info failed: code[${obj.errcode}], message[${obj.errmsg}]`);            }        } catch (e) {            onError(e);        }    });}).on('error', onError).setTimeout(rule.timeout, () => onError('timeout'));req.pipe(req2); ",
		"timeout": 60000,
		"ticketValidity": 43200000,
		"getUserUrl": "http://127.0.0.1:80/tif/api/zwwx/{paasid}/cgi-bin/user/getuserinfo?code={code}",
		"getUserUrlScan": "http://127.0.0.1:80/tif/api/zwwx/{paasid}/cgi-bin/user/getuserinfo?scanType=1&code={code}",
		"getUserUrlYhzx": "http://smartgate.shuzhigy.com/orgDev/rz/userLogin/getUidByCode?code={code}"
	},
	{
		"appName": "wwlocal identity init",
		"customMatcher": "if (!rule._initialized) {rule._initialized = true;let enc = encodeURIComponent, gotoLogin = (paasId, config, req, protocol, res) => {if (req.headers['host'] === 'smartgate.shuzhigy.com') {protocol = 'https://';}if (!config || !paasId || paasId === 'undefined' || (/xmlhttprequest/).test(req.headers['x-requested-with'])) {res.writeHead(401);res.write('Unauthorized: config missing or api session expired.');} else {let homeUrl = protocol + req.headers['host'] + req.url, authUrl = protocol + req.headers['host'] + '/_tif_wwlocal_login_/?url=' + enc(homeUrl), redirectUrl = req.sp_wwl_oauth_url.replace('{appid}', config.appId).replace('{agentid}', config.agentId).replace('{paasid}', paasId).replace('{redirect}', enc(authUrl));res.writeHead(302, {location: redirectUrl});}res.end();};let goProviceLogin = (req, res, rf, rule) => {let query = req.parsedUrl.query;let host = req.headers['host'];let regexp = rule.regexp;let username = query.username, password = query.password;if (username && password) {let getProvinceUserUrl = 'http://127.0.0.1/orgdev/sso/login?username=' + username + '&password=' + password;let onError = msg => {res.writeHead(500);res.end(msg.message || msg);};let data = [];let req3 = process.mainModule.require('http').post(getProvinceUserUrl, rest3 => {rest3.on('error', onError).on('data', d => data.push(d)).on('end', () => {try {let obj = JSON.parse(Buffer.concat(data).toString());if (obj.errcode == 0 || obj.errcode == 40029) {let id = Math.random().toString(16).slice(2) + Date.now().toString(16) + Math.random().toString(16).slice(2);return new Promise(function (resolve, reject) {if (obj.errcode == 0) {rf.cache.setCache(`tif:auth:wwl:${id}`, JSON.stringify(obj), rule.ticketValidity, function (err) {err ? reject(err) : resolve()})} else {resolve();}}).then(() => {let redirect_url = query.url;let cookie = `tif_wwlid=${id};path=/;HttpOnly`;if (new RegExp(regexp, 'i').test(host)) {cookie = `tif_wwlid=${id};path=/;domain=.shuzhigy.com;HttpOnly`;}let homeUrl = 'https://' + req.headers['host'] + req.url;res.writeHead(302, {'location': homeUrl, 'set-cookie': cookie});res.end();})} else {onError(`OAuth error, get user info failed: code[${obj.errcode}], message[${obj.errmsg}]`);}} catch (e) {onError(e);}});}).on('error', onError).setTimeout(rule.timeout, () => onError('timeout'));req.pipe(req3);}};rf.assignWwlocalIdentity = (paasId, corpwxConfig, req, protocol, res, callback) => {let id = req.cookies['tif_wwlid'];let query = req.parsedUrl.query;let username = query.username, password = query.password;if (!id) {if (username && password) {goProviceLogin(req, res, rf, rule)} else {gotoLogin(paasId, corpwxConfig, req, protocol, res);}} else {rf.cache.getCache(`tif:auth:wwl:${id}`, true, (err, ret) => {if (!err && ret) {ret = JSON.parse(ret);callback(null, {UserId: ret.UserId, UserInfo: ret.DeviceId, ExtData: '', tags: ['0']});} else {if (username && password) {goProviceLogin(req, res, rf, rule)} else {gotoLogin(paasId, corpwxConfig, req, protocol, res);}}});}};}if ((req.headers['user-agent'] || '').indexOf('wwlocal/') > -1) {req.sp_wwl_oauth_url = rule.authUrl;req.sp_assignIdentity = rf.assignWwlocalIdentity;} else {req.sp_wwl_oauth_url = rule.qrandrzUrl;}",
		"~authUrl": "http://zwwx2.gdbs.gov.cn/connect/oauth2/authorize?appid={appid}&redirect_uri={redirect}&response_type=code&scope=snsapi_base&agentid={agentid}&state={paasid}",
		"authUrl": "https://open.weixin.qq.com/connect/oauth2/authorize?appid={appid}&redirect_uri={redirect}&response_type=code&scope=snsapi_base&agentid={agentid}&state={paasid}#wechat_redirect",
		"qrUrl": "http://zwwx2.gdbs.gov.cn/wwopen/sso/qrConnect?appid={appid}&agentid={agentid}&redirect_uri={redirect}&state={paasid}",
		"homeUrl": "https://smartgate.shuzhigy.com",
		"qrandrzUrl": "https://smartgate.shuzhigy.com/orgDev/rz/index.html?appid={appid}&agentid={agentid}&redirect_uri={redirect}&state={paasid}"
	}
]